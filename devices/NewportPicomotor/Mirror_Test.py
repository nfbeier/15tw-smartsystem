# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Mirror_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import numpy as np
from pylablib.devices import Newport
import sys, os
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1103, 432)
        self.stepSize = QtWidgets.QSpinBox(Form)
        self.stepSize.setGeometry(QtCore.QRect(20, 100, 101, 41))
        self.stepSize.setMaximum(1000)
        self.stepSize.setObjectName("stepSize")
        self.ButtonUp = QtWidgets.QToolButton(Form)
        self.ButtonUp.setGeometry(QtCore.QRect(130, 100, 41, 41))
        self.ButtonUp.setArrowType(QtCore.Qt.UpArrow)
        self.ButtonUp.setObjectName("ButtonUp")
        self.ButtonDown = QtWidgets.QToolButton(Form)
        self.ButtonDown.setGeometry(QtCore.QRect(130, 150, 41, 41))
        self.ButtonDown.setArrowType(QtCore.Qt.DownArrow)
        self.ButtonDown.setObjectName("ButtonDown")
        self.ButtonRight = QtWidgets.QToolButton(Form)
        self.ButtonRight.setGeometry(QtCore.QRect(80, 150, 41, 41))
        self.ButtonRight.setArrowType(QtCore.Qt.RightArrow)
        self.ButtonRight.setObjectName("ButtonRight")
        self.ButtonLeft = QtWidgets.QToolButton(Form)
        self.ButtonLeft.setGeometry(QtCore.QRect(20, 150, 41, 41))
        self.ButtonLeft.setArrowType(QtCore.Qt.LeftArrow)
        self.ButtonLeft.setObjectName("ButtonLeft")
        self.Mirror_Label = QtWidgets.QLabel(Form)
        self.Mirror_Label.setGeometry(QtCore.QRect(30, 50, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.Mirror_Label.setFont(font)
        self.Mirror_Label.setObjectName("Mirror_Label")
        self.yStepNumber = QtWidgets.QLCDNumber(Form)
        self.yStepNumber.setGeometry(QtCore.QRect(190, 130, 61, 41))
        self.yStepNumber.setDigitCount(5)
        self.yStepNumber.setObjectName("yStepNumber")
        self.xStepNumber = QtWidgets.QLCDNumber(Form)
        self.xStepNumber.setGeometry(QtCore.QRect(20, 200, 61, 41))
        self.xStepNumber.setObjectName("xStepNumber")
        self.yValueLabel = QtWidgets.QLabel(Form)
        self.yValueLabel.setGeometry(QtCore.QRect(180, 100, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.yValueLabel.setFont(font)
        self.yValueLabel.setObjectName("yValueLabel")
        self.xValueLabel = QtWidgets.QLabel(Form)
        self.xValueLabel.setGeometry(QtCore.QRect(90, 200, 81, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.xValueLabel.setFont(font)
        self.xValueLabel.setObjectName("xValueLabel")
        self.ButtonHome = QtWidgets.QPushButton(Form)
        self.ButtonHome.setGeometry(QtCore.QRect(180, 200, 75, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ButtonHome.setFont(font)
        self.ButtonHome.setObjectName("ButtonHome")
        self.Mirror_Label_2 = QtWidgets.QLabel(Form)
        self.Mirror_Label_2.setGeometry(QtCore.QRect(390, 50, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.Mirror_Label_2.setFont(font)
        self.Mirror_Label_2.setObjectName("Mirror_Label_2")
        self.stepSize_2 = QtWidgets.QSpinBox(Form)
        self.stepSize_2.setGeometry(QtCore.QRect(370, 100, 101, 41))
        self.stepSize_2.setMaximum(1000)
        self.stepSize_2.setObjectName("stepSize_2")
        self.ButtonLeft_2 = QtWidgets.QToolButton(Form)
        self.ButtonLeft_2.setGeometry(QtCore.QRect(370, 150, 41, 41))
        self.ButtonLeft_2.setArrowType(QtCore.Qt.LeftArrow)
        self.ButtonLeft_2.setObjectName("ButtonLeft_2")
        self.ButtonRight_2 = QtWidgets.QToolButton(Form)
        self.ButtonRight_2.setGeometry(QtCore.QRect(430, 150, 41, 41))
        self.ButtonRight_2.setArrowType(QtCore.Qt.RightArrow)
        self.ButtonRight_2.setObjectName("ButtonRight_2")
        self.xStepNumber_2 = QtWidgets.QLCDNumber(Form)
        self.xStepNumber_2.setGeometry(QtCore.QRect(370, 200, 61, 41))
        self.xStepNumber_2.setObjectName("xStepNumber_2")
        self.xValueLabel_2 = QtWidgets.QLabel(Form)
        self.xValueLabel_2.setGeometry(QtCore.QRect(440, 200, 81, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.xValueLabel_2.setFont(font)
        self.xValueLabel_2.setObjectName("xValueLabel_2")
        self.ButtonUp_2 = QtWidgets.QToolButton(Form)
        self.ButtonUp_2.setGeometry(QtCore.QRect(480, 100, 41, 41))
        self.ButtonUp_2.setArrowType(QtCore.Qt.UpArrow)
        self.ButtonUp_2.setObjectName("ButtonUp_2")
        self.ButtonDown_2 = QtWidgets.QToolButton(Form)
        self.ButtonDown_2.setGeometry(QtCore.QRect(480, 150, 41, 41))
        self.ButtonDown_2.setArrowType(QtCore.Qt.DownArrow)
        self.ButtonDown_2.setObjectName("ButtonDown_2")
        self.ButtonHome_2 = QtWidgets.QPushButton(Form)
        self.ButtonHome_2.setGeometry(QtCore.QRect(530, 200, 75, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ButtonHome_2.setFont(font)
        self.ButtonHome_2.setObjectName("ButtonHome_2")
        self.yStepNumber_2 = QtWidgets.QLCDNumber(Form)
        self.yStepNumber_2.setGeometry(QtCore.QRect(540, 130, 61, 41))
        self.yStepNumber_2.setDigitCount(5)
        self.yStepNumber_2.setObjectName("yStepNumber_2")
        self.yValueLabel_2 = QtWidgets.QLabel(Form)
        self.yValueLabel_2.setGeometry(QtCore.QRect(530, 100, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.yValueLabel_2.setFont(font)
        self.yValueLabel_2.setObjectName("yValueLabel_2")
        self.stepSize_3 = QtWidgets.QSpinBox(Form)
        self.stepSize_3.setGeometry(QtCore.QRect(740, 100, 101, 41))
        self.stepSize_3.setMaximum(1000)
        self.stepSize_3.setObjectName("stepSize_3")
        self.Mirror_Label_3 = QtWidgets.QLabel(Form)
        self.Mirror_Label_3.setGeometry(QtCore.QRect(750, 50, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.Mirror_Label_3.setFont(font)
        self.Mirror_Label_3.setObjectName("Mirror_Label_3")
        self.ButtonLeft_3 = QtWidgets.QToolButton(Form)
        self.ButtonLeft_3.setGeometry(QtCore.QRect(740, 150, 41, 41))
        self.ButtonLeft_3.setArrowType(QtCore.Qt.LeftArrow)
        self.ButtonLeft_3.setObjectName("ButtonLeft_3")
        self.ButtonRight_3 = QtWidgets.QToolButton(Form)
        self.ButtonRight_3.setGeometry(QtCore.QRect(800, 150, 41, 41))
        self.ButtonRight_3.setArrowType(QtCore.Qt.RightArrow)
        self.ButtonRight_3.setObjectName("ButtonRight_3")
        self.ButtonUp_3 = QtWidgets.QToolButton(Form)
        self.ButtonUp_3.setGeometry(QtCore.QRect(850, 100, 41, 41))
        self.ButtonUp_3.setArrowType(QtCore.Qt.UpArrow)
        self.ButtonUp_3.setObjectName("ButtonUp_3")
        self.ButtonDown_3 = QtWidgets.QToolButton(Form)
        self.ButtonDown_3.setGeometry(QtCore.QRect(850, 150, 41, 41))
        self.ButtonDown_3.setArrowType(QtCore.Qt.DownArrow)
        self.ButtonDown_3.setObjectName("ButtonDown_3")
        self.yStepNumber_3 = QtWidgets.QLCDNumber(Form)
        self.yStepNumber_3.setGeometry(QtCore.QRect(910, 130, 61, 41))
        self.yStepNumber_3.setDigitCount(5)
        self.yStepNumber_3.setObjectName("yStepNumber_3")
        self.yValueLabel_3 = QtWidgets.QLabel(Form)
        self.yValueLabel_3.setGeometry(QtCore.QRect(900, 100, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.yValueLabel_3.setFont(font)
        self.yValueLabel_3.setObjectName("yValueLabel_3")
        self.xStepNumber_3 = QtWidgets.QLCDNumber(Form)
        self.xStepNumber_3.setGeometry(QtCore.QRect(740, 200, 61, 41))
        self.xStepNumber_3.setObjectName("xStepNumber_3")
        self.xValueLabel_3 = QtWidgets.QLabel(Form)
        self.xValueLabel_3.setGeometry(QtCore.QRect(810, 200, 81, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.xValueLabel_3.setFont(font)
        self.xValueLabel_3.setObjectName("xValueLabel_3")
        self.ButtonHome_3 = QtWidgets.QPushButton(Form)
        self.ButtonHome_3.setGeometry(QtCore.QRect(900, 190, 75, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ButtonHome_3.setFont(font)
        self.ButtonHome_3.setObjectName("ButtonHome_3")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.ButtonUp.setText(_translate("Form", "..."))
        self.ButtonDown.setText(_translate("Form", "..."))
        self.ButtonRight.setText(_translate("Form", "..."))
        self.ButtonLeft.setText(_translate("Form", "..."))
        self.Mirror_Label.setText(_translate("Form", "Mirror 1 "))
        self.yValueLabel.setText(_translate("Form", "Y value"))
        self.xValueLabel.setText(_translate("Form", "X value"))
        self.ButtonHome.setText(_translate("Form", "Home"))
        self.Mirror_Label_2.setText(_translate("Form", "Mirror 2"))
        self.ButtonLeft_2.setText(_translate("Form", "..."))
        self.ButtonRight_2.setText(_translate("Form", "..."))
        self.xValueLabel_2.setText(_translate("Form", "X value"))
        self.ButtonUp_2.setText(_translate("Form", "..."))
        self.ButtonDown_2.setText(_translate("Form", "..."))
        self.ButtonHome_2.setText(_translate("Form", "Home"))
        self.yValueLabel_2.setText(_translate("Form", "Y value"))
        self.Mirror_Label_3.setText(_translate("Form", "Mirror 3"))
        self.ButtonLeft_3.setText(_translate("Form", "..."))
        self.ButtonRight_3.setText(_translate("Form", "..."))
        self.ButtonUp_3.setText(_translate("Form", "..."))
        self.ButtonDown_3.setText(_translate("Form", "..."))
        self.yValueLabel_3.setText(_translate("Form", "Y value"))
        self.xValueLabel_3.setText(_translate("Form", "X value"))
        self.ButtonHome_3.setText(_translate("Form", "Home"))


#if __name__ == "__main__":
 #   import sys
  #  app = QtWidgets.QApplication(sys.argv)
   # Form = QtWidgets.QWidget()
    #ui = Ui_Form()
    #ui.setupUi(Form)
    #Form.show()
    #sys.exit(app.exec_())


# Update the current working directory check and import
cwd = os.getcwd()
print(cwd)

if '15tw-smartsystem' not in cwd.split(os.path.sep):
    raise ValueError("The directory does not contain '15tw-smartsystem' folder.")

cwd = os.path.sep.join(cwd.split(os.path.sep)[:cwd.split(os.path.sep).index('15tw-smartsystem') + 1])
sys.path.insert(0, cwd)

from Mirror_GUI import Ui_Form  # Import the generated UI file

class picoMotor_App(QtWidgets.QWidget):
    def __init__(self):
        super(picoMotor_App, self).__init__()
        self.ui = Ui_Form()
        self.ui.setupUi(self)
        
        # Axis assignments
        self.stage1_axes = [1, 2, 3, 4]  # Axes 1, 2, 3, 4 for stage 1
        self.stage2_axes = [1, 2, 3, 4]  # Axes 1, 2, 3, 4 for stage 2
        
        try:
            self.stage1 = Newport.Picomotor8742()
            self.stage2 = Newport.Picomotor8742(1)
        except Newport.base.NewportBackendError:
            print("Newport Picomotor controller could not be initialized.")
            self.stage1 = None
            self.stage2 = None

        # Connect buttons to picomotor functions for stage1 (Mirror 1 and Mirror 2)
        self.ui.ButtonLeft.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber, self.ui.yStepNumber, axis=self.stage1_axes[0], steps=-1 * self.ui.stepSize.value()))
        self.ui.ButtonRight.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber, self.ui.yStepNumber, axis=self.stage1_axes[0], steps=self.ui.stepSize.value()))
        self.ui.ButtonUp.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber, self.ui.yStepNumber, axis=self.stage1_axes[1], steps=self.ui.stepSize.value()))
        self.ui.ButtonDown.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber, self.ui.yStepNumber, axis=self.stage1_axes[1], steps=-1 * self.ui.stepSize.value()))
        self.ui.ButtonHome.clicked.connect(lambda: self.moveToHome(self.stage1, self.ui.xStepNumber, self.ui.yStepNumber, xAxis=self.stage1_axes[0], yAxis=self.stage1_axes[1]))

        self.ui.ButtonLeft_2.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber_2, self.ui.yStepNumber_2, axis=self.stage1_axes[2], steps=-1 * self.ui.stepSize_2.value()))
        self.ui.ButtonRight_2.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber_2, self.ui.yStepNumber_2, axis=self.stage1_axes[2], steps=self.ui.stepSize_2.value()))
        self.ui.ButtonUp_2.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber_2, self.ui.yStepNumber_2, axis=self.stage1_axes[3], steps=self.ui.stepSize_2.value()))
        self.ui.ButtonDown_2.clicked.connect(lambda: self.movePico(self.stage1, self.ui.xStepNumber_2, self.ui.yStepNumber_2, axis=self.stage1_axes[3], steps=-1 * self.ui.stepSize_2.value()))
        self.ui.ButtonHome_2.clicked.connect(lambda: self.moveToHome(self.stage1, self.ui.xStepNumber_2, self.ui.yStepNumber_2, xAxis=self.stage1_axes[2], yAxis=self.stage1_axes[3]))

        # Connect buttons to picomotor functions for stage2 (Mirror 3)
        self.ui.ButtonLeft_3.clicked.connect(lambda: self.movePico(self.stage2, self.ui.xStepNumber_3, self.ui.yStepNumber_3, axis=self.stage2_axes[0], steps=-1 * self.ui.stepSize_3.value()))
        self.ui.ButtonRight_3.clicked.connect(lambda: self.movePico(self.stage2, self.ui.xStepNumber_3, self.ui.yStepNumber_3, axis=self.stage2_axes[0], steps=self.ui.stepSize_3.value()))
        self.ui.ButtonUp_3.clicked.connect(lambda: self.movePico(self.stage2, self.ui.xStepNumber_3, self.ui.yStepNumber_3, axis=self.stage2_axes[1], steps=self.ui.stepSize_3.value()))
        self.ui.ButtonDown_3.clicked.connect(lambda: self.movePico(self.stage2, self.ui.xStepNumber_3, self.ui.yStepNumber_3, axis=self.stage2_axes[1], steps=-1 * self.ui.stepSize_3.value()))
        self.ui.ButtonHome_3.clicked.connect(lambda: self.moveToHome(self.stage2, self.ui.xStepNumber_3, self.ui.yStepNumber_3, xAxis=self.stage2_axes[0], yAxis=self.stage2_axes[1]))

    def movePico(self, stage, xStepDisplay, yStepDisplay, axis, steps):
        if stage:
            stage.move_by(axis=axis, steps=steps)
            stage.wait_move()
            if axis in [self.stage1_axes[0], self.stage1_axes[2], self.stage2_axes[0]]:
                xStepDisplay.display(stage.get_position(axis))
            elif axis in [self.stage1_axes[1], self.stage1_axes[3],  self.stage2_axes[1]]:
                yStepDisplay.display(stage.get_position(axis))

    def moveToHome(self, stage, xStepDisplay, yStepDisplay, xAxis, yAxis):
        if stage:
            # Move x-axis to home
            stage.move_to(axis=xAxis, position=0)
            stage.wait_move()
            # Move y-axis to home
            stage.move_to(axis=yAxis, position=0)
            stage.wait_move()
            # Reset step counters
            xStepDisplay.display(stage.get_position(xAxis))
            yStepDisplay.display(stage.get_position(yAxis))

    def closeEvent(self, event):
        if self.stage1:
            self.stage1.close()
        if self.stage2:
            self.stage2.close()
        event.accept()

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    application = picoMotor_App()
    application.show()
    sys.exit(app.exec_())
